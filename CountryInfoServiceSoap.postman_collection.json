{
	"info": {
		"_postman_id": "b173b091-c9e1-4b8c-bccc-0331f0d21a96",
		"name": "CountryInfoServiceSoap",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38244954",
		"_collection_link": "https://www.postman.com/orbital-module-geoscientist-14688076/workspace/my-workspace/collection/38244954-b173b091-c9e1-4b8c-bccc-0331f0d21a96?action=share&source=collection_link&creator=38244954"
	},
	"item": [
		{
			"name": "ListOfContinentsByName (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус код равен 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"const xml2js = require('xml2js');",
							"",
							"pm.test(\"Проверка количества континентов\", function (done) {",
							"    const responseXml = pm.response.text();",
							"    ",
							"    xml2js.parseString(responseXml, { explicitArray: false }, function (err, result) {",
							"        if (err) {",
							"            pm.expect.fail(\"Failed to parse XML: \" + err);",
							"            done();",
							"            return;",
							"        }",
							"        ",
							"        const continents = result['soap:Envelope']['soap:Body']['m:ListOfContinentsByNameResponse']['m:ListOfContinentsByNameResult']['m:tContinent'];",
							"        pm.expect(Array.isArray(continents)).to.be.true; // Check if continents is an array",
							"        pm.expect(continents.length).to.equal(6); // Adjust the expected count if necessary",
							"        done();",
							"    });",
							"});",
							"pm.test(\"Проверка, что ответ является строкой\", function () {",
							"    const responseBody = pm.response.text();",
							"    pm.expect(typeof responseBody).to.equal('string');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": " <Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <Body>\n        <ListOfContinentsByName  xmlns=\"http://www.oorsprong.org/websamples.countryinfo\"/>\n    </Body>\n</Envelope>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
					"protocol": "http",
					"host": [
						"webservices",
						"oorsprong",
						"org"
					],
					"path": [
						"websamples.countryinfo",
						"CountryInfoService.wso"
					],
					"query": [
						{
							"key": "WSDL",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ListOfContinentsByName (405) использование метода PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус код равен 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": " <Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <Body>\n        <ListOfContinentsByName  xmlns=\"http://www.oorsprong.org/websamples.countryinfo\"/>\n    </Body>\n</Envelope>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
					"protocol": "http",
					"host": [
						"webservices",
						"oorsprong",
						"org"
					],
					"path": [
						"websamples.countryinfo",
						"CountryInfoService.wso"
					],
					"query": [
						{
							"key": "WSDL",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ListOfContinentsByName   с ошибкой в теле запроса (500)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус код равен 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"const xml2js = require('xml2js');",
							"",
							"pm.test(\"Check number of continents\", function (done) {",
							"    const responseXml = pm.response.text();",
							"    ",
							"    xml2js.parseString(responseXml, { explicitArray: false }, function (err, result) {",
							"        if (err) {",
							"            pm.expect.fail(\"Failed to parse XML: \" + err);",
							"            done();",
							"            return;",
							"        }",
							"        ",
							"        const continents = result['soap:Envelope']['soap:Body']['m:ListOfContinentsByNameResponse']['m:ListOfContinentsByNameResult']['m:tContinent'];",
							"        pm.expect(Array.isArray(continents)).to.be.true; // Check if continents is an array",
							"        pm.expect(continents.length).to.equal(6); // Adjust the expected count if necessary",
							"        done();",
							"    });",
							"});",
							"pm.test(\"Проверка, что ответ является строкой\", function () {",
							"    const responseBody = pm.response.text();",
							"    pm.expect(typeof responseBody).to.equal('string');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <Body>\n        <ListOfContinentsByNames  xmlns=\"http://www.oorsprong.org/websamples.countryinfo\"/>\n    </Body>\n</Envelope>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
					"protocol": "http",
					"host": [
						"webservices",
						"oorsprong",
						"org"
					],
					"path": [
						"websamples.countryinfo",
						"CountryInfoService.wso"
					],
					"query": [
						{
							"key": "WSDL",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ListOfCurrenciesByName (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус код равен 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Названия стран string\", function () {",
							"    const responseXml = pm.response.text();",
							"    ",
							"    // Используем регулярное выражение для поиска всех значений <m:sName>",
							"    const regex = /<m:sName>(.*?)<\\/m:sName>/g;",
							"    let match;",
							"    let allAreStrings = true;",
							"",
							"    while ((match = regex.exec(responseXml)) !== null) {",
							"        const sNameValue = match[1];",
							"        if (typeof sNameValue !== 'string') {",
							"            allAreStrings = false;",
							"            break;",
							"        }",
							"    }",
							"",
							"    pm.expect(allAreStrings).to.be.true; // Проверяем, что все значения являются строками",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <Body>\n        <ListOfCurrenciesByName xmlns=\"http://www.oorsprong.org/websamples.countryinfo\"/>\n    </Body>\n</Envelope>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
					"protocol": "http",
					"host": [
						"webservices",
						"oorsprong",
						"org"
					],
					"path": [
						"websamples.countryinfo",
						"CountryInfoService.wso"
					],
					"query": [
						{
							"key": "WSDL",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ListOfCurrenciesByName (415) отключенный content-type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус код равен 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <Body>\n        <ListOfCurrenciesByName xmlns=\"http://www.oorsprong.org/websamples.countryinfo\"/>\n    </Body>\n</Envelope>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
					"protocol": "http",
					"host": [
						"webservices",
						"oorsprong",
						"org"
					],
					"path": [
						"websamples.countryinfo",
						"CountryInfoService.wso"
					],
					"query": [
						{
							"key": "WSDL",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ListOfCountryNamesByName (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус код равен 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <Body>\n        <ListOfCountryNamesByName xmlns=\"http://www.oorsprong.org/websamples.countryinfo\"/>\n    </Body>\n</Envelope>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
					"protocol": "http",
					"host": [
						"webservices",
						"oorsprong",
						"org"
					],
					"path": [
						"websamples.countryinfo",
						"CountryInfoService.wso"
					],
					"query": [
						{
							"key": "WSDL",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CountryName (200) RU",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус код равен 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <Body>\n        <CountryName xmlns=\"http://www.oorsprong.org/websamples.countryinfo\">\n            <sCountryISOCode>RU</sCountryISOCode>\n        </CountryName>\n    </Body>\n</Envelope>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
					"protocol": "http",
					"host": [
						"webservices",
						"oorsprong",
						"org"
					],
					"path": [
						"websamples.countryinfo",
						"CountryInfoService.wso"
					],
					"query": [
						{
							"key": "WSDL",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CountryName (200) Страна чудес",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус код равен 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Страна не найдена\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Country not found in the database\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <Body>\n        <CountryName xmlns=\"http://www.oorsprong.org/websamples.countryinfo\">\n            <sCountryISOCode>Страна чудес</sCountryISOCode>\n        </CountryName>\n    </Body>\n</Envelope>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
					"protocol": "http",
					"host": [
						"webservices",
						"oorsprong",
						"org"
					],
					"path": [
						"websamples.countryinfo",
						"CountryInfoService.wso"
					],
					"query": [
						{
							"key": "WSDL",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CountryISOCode (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус код равен 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <Body>\n        <CountryISOCode xmlns=\"http://www.oorsprong.org/websamples.countryinfo\">\n            <sCountryName>Russian Federation</sCountryName>\n        </CountryISOCode>\n    </Body>\n</Envelope>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
					"protocol": "http",
					"host": [
						"webservices",
						"oorsprong",
						"org"
					],
					"path": [
						"websamples.countryinfo",
						"CountryInfoService.wso"
					],
					"query": [
						{
							"key": "WSDL",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "FullCountryInfo (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус код равен 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Проверка, что код страны является строкой и не пустой\", function () {",
							"    const responseXml = pm.response.text();",
							"    const isoCodeMatch = responseXml.match(/<m:sISOCode>(.*?)<\\/m:sISOCode>/);",
							"    const isoCode = isoCodeMatch ? isoCodeMatch[1] : null;",
							"",
							"    pm.expect(isoCode).to.be.a('string').and.to.not.be.empty;",
							"});",
							"",
							"pm.test(\"Проверка, что название страны является строкой и не пустое\", function () {",
							"    const responseXml = pm.response.text();",
							"    const countryNameMatch = responseXml.match(/<m:sName>(.*?)<\\/m:sName>/);",
							"    const countryName = countryNameMatch ? countryNameMatch[1] : null;",
							"",
							"    pm.expect(countryName).to.be.a('string').and.to.not.be.empty;",
							"});",
							"",
							"pm.test(\"Проверка, что столица является строкой и не пустая\", function () {",
							"    const responseXml = pm.response.text();",
							"    const capitalCityMatch = responseXml.match(/<m:sCapitalCity>(.*?)<\\/m:sCapitalCity>/);",
							"    const capitalCity = capitalCityMatch ? capitalCityMatch[1] : null;",
							"",
							"    pm.expect(capitalCity).to.be.a('string').and.to.not.be.empty;",
							"});",
							"",
							"pm.test(\"Проверка, что телефонный код является строкой и не пустой\", function () {",
							"    const responseXml = pm.response.text();",
							"    const phoneCodeMatch = responseXml.match(/<m:sPhoneCode>(.*?)<\\/m:sPhoneCode>/);",
							"    const phoneCode = phoneCodeMatch ? phoneCodeMatch[1] : null;",
							"",
							"    pm.expect(phoneCode).to.be.a('string').and.to.not.be.empty;",
							"});",
							"",
							"pm.test(\"Проверка, что код валюты является строкой и не пустой\", function () {",
							"    const responseXml = pm.response.text();",
							"    const currencyISOCodeMatch = responseXml.match(/<m:sCurrencyISOCode>(.*?)<\\/m:sCurrencyISOCode>/);",
							"    const currencyISOCode = currencyISOCodeMatch ? currencyISOCodeMatch[1] : null;",
							"",
							"    pm.expect(currencyISOCode).to.be.a('string').and.to.not.be.empty;",
							"});",
							"",
							"pm.test(\"Проверка, что флаг страны является строкой и не пустой\", function () {",
							"    const responseXml = pm.response.text();",
							"    const countryFlagMatch = responseXml.match(/<m:sCountryFlag>(.*?)<\\/m:sCountryFlag>/);",
							"    const countryFlag = countryFlagMatch ? countryFlagMatch[1] : null;",
							"",
							"    pm.expect(countryFlag).to.be.a('string').and.to.not.be.empty;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <Body>\n        <FullCountryInfo xmlns=\"http://www.oorsprong.org/websamples.countryinfo\">\n            <sCountryISOCode>RU</sCountryISOCode>\n        </FullCountryInfo>\n    </Body>\n</Envelope>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
					"protocol": "http",
					"host": [
						"webservices",
						"oorsprong",
						"org"
					],
					"path": [
						"websamples.countryinfo",
						"CountryInfoService.wso"
					],
					"query": [
						{
							"key": "WSDL",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "LanguageName (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус код равен 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Проверка, что название языка является строкой\", function () {",
							"    const responseXml = pm.response.text();",
							"    ",
							"    // Используем регулярное выражение для извлечения значения <m:LanguageNameResult>",
							"    const regex = /<m:LanguageNameResult>(.*?)<\\/m:LanguageNameResult>/;",
							"    const match = responseXml.match(regex);",
							"    ",
							"    // Проверяем, что значение найдено",
							"    pm.expect(match).to.not.be.null;",
							"",
							"    // Извлекаем название языка",
							"    const languageName = match[1];",
							"",
							"    // Проверяем, что название языка является строкой",
							"    pm.expect(typeof languageName).to.equal('string');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <Body>\n        <LanguageName xmlns=\"http://www.oorsprong.org/websamples.countryinfo\">\n            <sISOCode>RUS</sISOCode>\n        </LanguageName>\n    </Body>\n</Envelope>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
					"protocol": "http",
					"host": [
						"webservices",
						"oorsprong",
						"org"
					],
					"path": [
						"websamples.countryinfo",
						"CountryInfoService.wso"
					],
					"query": [
						{
							"key": "WSDL",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "LanguageName (500) незакрытый тег <sISOCode>",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус код равен 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"  pm.test(\"Проверка, что Content-Type заголовок установлен на text/xml\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include('text/xml');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <Body>\n        <LanguageName xmlns=\"http://www.oorsprong.org/websamples.countryinfo\">\n            <sISOCode>RUS<sISOCode>\n        </LanguageName>\n    </Body>\n</Envelope>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
					"protocol": "http",
					"host": [
						"webservices",
						"oorsprong",
						"org"
					],
					"path": [
						"websamples.countryinfo",
						"CountryInfoService.wso"
					],
					"query": [
						{
							"key": "WSDL",
							"value": null
						}
					]
				}
			},
			"response": []
		}
	]
}